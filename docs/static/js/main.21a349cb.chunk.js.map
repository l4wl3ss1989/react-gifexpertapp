{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","event","preventDefault","trim","length","currentCategories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","fetchGifts","useFetchGifts","key","GifExpertApp","categories","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qMA6BeA,EA1BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACLC,mBAAS,IADJ,mBAClCC,EADkC,KACtBC,EADsB,KAezC,OACE,0BAAMC,SAXa,SAAAC,GACnBA,EAAMC,iBACeJ,EAAWK,OAAOC,OAAS,IAG9CR,GAAc,SAAAS,GAAiB,OAAKP,GAAL,mBAAoBO,OACnDN,EAAc,OAMd,2BAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAdhB,SAAAP,GAAK,OAAIF,EAAcE,EAAMQ,OAAOF,Y,uBCNnDG,EAAO,uCAAG,WAAMC,GAAN,qBAAAC,EAAA,6DACfC,EADe,iDACiCC,UACpDH,GAFmB,+DAIFI,MAAMF,GAJJ,cAIfG,EAJe,gBAKEA,EAAKC,OALP,uBAKbC,EALa,EAKbA,KALa,kBAOdA,EAAKC,KAAI,SAAAC,GAAG,YAAK,CACtBC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXT,IAAG,UAAEO,EAAIG,cAAN,aAAE,EAAYC,iBAAiBX,SAVf,2CAAH,sDCWLY,EATK,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOT,EAAU,EAAVA,IAChC,OACE,yBAAKa,UAAU,0CACb,yBAAKC,IAAKd,EAAKe,IAAKN,IACpB,2BAAIA,KCeKO,EAhBC,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SAAe,ECDL,SAAAA,GAAa,IAAD,EACbd,mBAAS,CACjCqB,KAAM,GACNY,SAAS,IAH4B,mBAChCC,EADgC,KACzBC,EADyB,KAevC,OATAC,qBAAU,YACQ,uCAAG,4BAAArB,EAAA,sEACIF,EAAQC,GADZ,OACXY,EADW,OAEjBS,EAAS,CAAEd,KAAMK,EAAQO,SAAS,IAFjB,2CAAH,qDAKhBI,KACC,CAACvB,IAEGoB,EDb2BI,CAAcxB,GAAlCY,EADkB,EACxBL,KAAcY,EADU,EACVA,QAEtB,OACE,oCACE,wBAAIJ,UAAU,qCAAqCf,GAClDmB,GAAW,uBAAGJ,UAAU,oCAAb,cACZ,yBAAKA,UAAU,aACZH,EAAOJ,KAAI,SAAAC,GAAG,OACb,kBAAC,EAAD,eAAagB,IAAKhB,EAAIC,IAAQD,UESzBiB,EAlBM,WAAO,IAAD,EACWxC,mBAAS,CAAC,cADrB,mBAClByC,EADkB,KACN1C,EADM,KAGzB,OACE,oCACE,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BACG0C,EAAWnB,KAAI,SAAAR,GAAQ,OACtB,kBAAC,EAAD,CAASyB,IAAG,WAAMzB,GAAYA,SAAUA,U,MCTlD4B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.21a349cb.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInputChange = event => setInputValue(event.target.value);\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    const correctValue = inputValue.trim().length > 2;\r\n\r\n    if (correctValue) {\r\n      setCategories(currentCategories => [inputValue, ...currentCategories]);\r\n      setInputValue('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"text\" value={inputValue} onChange={handleInputChange} />\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AddCategory;\r\n","export const getGifs = async category => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n    category\r\n  )}&limit=10&api_key=dsE2NHtWy9iQyXmjJgLin2tWpxEa0qs7`;\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n\r\n  return data.map(img => ({\r\n    id: img.id,\r\n    title: img.title,\r\n    url: img.images?.downsized_medium.url,\r\n  }));\r\n};\r\n","import React from 'react';\r\n\r\nconst GifGridItem = ({ id, title, url }) => {\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeIn\">\r\n      <img src={url} alt={title} />\r\n      <p>{title}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GifGridItem;\r\n","import React from 'react';\r\nimport { useFetchGifts } from '../hooks/useFetchGifs';\r\n\r\nimport GifGridItem from './GifGridItem';\r\n\r\nconst GifGrid = ({ category }) => {\r\n  const { data: images, loading } = useFetchGifts(category);\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n      {loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\r\n      <div className=\"card-grid\">\r\n        {images.map(img => (\r\n          <GifGridItem key={img.id} {...img} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifGrid;\r\n","import { useEffect, useState } from 'react';\r\n\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifts = category => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchGifts = async () => {\r\n      const images = await getGifs(category);\r\n      setState({ data: images, loading: false });\r\n    };\r\n\r\n    fetchGifts();\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n","import React, { useState } from 'react';\r\n\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n  const [categories, setCategories] = useState(['One Punch']);\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n\r\n      <ol>\r\n        {categories.map(category => (\r\n          <GifGrid key={`#${category}`} category={category} />\r\n        ))}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport GifExpertApp from \"./GifExpertApp\";\n\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <GifExpertApp />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}